{"version":3,"file":"static/js/7618.71703d39.chunk.js","mappings":"oOAQA,MAiFA,EAjF+BA,KA6BvBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,EAAEC,SAAA,EACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAAAL,SAAC,gDAGrDC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQG,WAAS,EAAAN,SAAC,wMAGtCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQG,WAAS,EAAAN,SAAC,yDAGtCC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACJ,QAAQ,YAAYK,MAAM,UAAUC,QAtChCC,UAChB,MAAMC,EAAM,IAAIC,KACVC,EAAkBF,EAAIG,OAAO,cAG7BC,EAAQ,CACV,yCACA,qCACA,2CACA,6CAIJ,IAAK,MAAMC,KAAYD,EAAO,CAC1B,MAAME,QAAiBC,MAAM,GAADC,OAAIC,qBAAsB,KAAAD,OAAIH,IAC1D,GAAIC,EAASI,GAAI,CACb,MAAMC,QAAgBL,EAASM,OAChB,OAAfV,QAAe,IAAfA,GAAAA,EAAiBW,KAAKR,EAASS,MAAM,KAAKC,OAAO,GAAGC,KAAK,KAAML,EACnE,MACIM,QAAQC,MAAM,mBAADV,OAAoBH,GAEzC,CAEA,MAAMM,QAAgBX,EAAImB,cAAc,CAAEC,KAAM,UAChDC,EAAAA,EAAAA,QAAOV,EAAS,iBAAiB,EAcoCtB,SAAC,oCAGlEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQG,WAAS,EAAAN,SAAC,8DAGtCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAAAL,SAAC,aAGrDC,EAAAA,EAAAA,KAACgC,EAAAA,GAAS,CACNV,KAAI,+ZAqBJW,SAAS,SACTC,MAAOC,EAAAA,GACPC,WAAS,KAEbpC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQG,WAAS,EAAAN,SAAC,sG","sources":["components/weeks/week1/assignment/Instructions.tsx"],"sourcesContent":["// src/components/weeks/week1/Introduction.tsx\r\nimport React from 'react';\r\nimport {Typography, Box, Button} from '@mui/material';\r\nimport JSZip from \"jszip\";\r\nimport { saveAs } from 'file-saver';\r\nimport {CopyBlock, dracula} from \"react-code-blocks\";\r\n\r\n\r\nconst Introduction: React.FC = () => {\r\n    const downloadZip = async () => {\r\n        const zip = new JSZip();\r\n        const week1CodeFolder = zip.folder('week1_code');\r\n\r\n        // List of files to include in the zip\r\n        const files = [\r\n            'assignments/week1_code/src/__init__.py',\r\n            'assignments/week1_code/src/main.py',\r\n            'assignments/week1_code/tests/__init__.py',\r\n            'assignments/week1_code/tests/test_main.py'\r\n        ];\r\n\r\n        // Fetch each file and add to the zip\r\n        for (const filePath of files) {\r\n            const response = await fetch(`${process.env.PUBLIC_URL}/${filePath}`);\r\n            if (response.ok) {\r\n                const content = await response.text();\r\n                week1CodeFolder?.file(filePath.split('/').slice(-2).join('/'), content);\r\n            } else {\r\n                console.error(`Failed to fetch ${filePath}`);\r\n            }\r\n        }\r\n\r\n        const content = await zip.generateAsync({ type: 'blob' });\r\n        saveAs(content, 'week1_code.zip');\r\n    };\r\n\r\n    return (\r\n        <Box my={4}>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                Week 1 Assignment: Basic Planet Generation\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n                In this assignment, you will create a simple Python script to generate a list of planets with randomly generated attributes. Follow the steps below to complete the assignment and test your code.\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n                To get started, download the assignment code files:\r\n            </Typography>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={downloadZip}>\r\n                Download Assignment Code Files\r\n            </Button>\r\n            <Typography variant=\"body1\" paragraph>\r\n                The downloaded zip file will contain the following file:\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n                main.py\r\n            </Typography>\r\n            <CopyBlock\r\n                text={`import random\r\n\r\ndef generate_planet_name():\r\n    # ADD YOUR CODE HERE\r\n    pass\r\n\r\ndef generate_planet():\r\n    # ADD YOUR CODE HERE\r\n    pass\r\n\r\ndef generate_solar_system(num_planets=8):\r\n    # ADD YOUR CODE HERE\r\n    pass\r\n\r\ndef print_solar_system(solar_system):\r\n    # ADD YOUR CODE HERE\r\n    pass\r\n\r\nif __name__ == \"__main__\":\r\n    solar_system = generate_solar_system()\r\n    print_solar_system(solar_system)`}\r\n                language=\"python\"\r\n                theme={dracula}\r\n                codeBlock\r\n            />\r\n            <Typography variant=\"body1\" paragraph>\r\n                Please modify the `main.py` file according to the instructions provided in the exercises below.\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Introduction;\r\n"],"names":["Introduction","_jsxs","Box","my","children","_jsx","Typography","variant","component","gutterBottom","paragraph","Button","color","onClick","async","zip","JSZip","week1CodeFolder","folder","files","filePath","response","fetch","concat","process","ok","content","text","file","split","slice","join","console","error","generateAsync","type","saveAs","CopyBlock","language","theme","dracula","codeBlock"],"sourceRoot":""}