"use strict";(self.webpackChunksolar_system=self.webpackChunksolar_system||[]).push([[8486],{8486:(e,t,n)=>{n.r(t),n.d(t,{AssignmentInstructions:()=>d,default:()=>p});var s=n(5043),a=n(3336),r=n(6446),i=n(5865),o=n(5721),l=n(1322),c=n(1021),h=n(579);function d(){return(0,s.useEffect)((()=>{const e=JSON.parse(localStorage.getItem("completionStatus")||"{}");e.assignment=!0,localStorage.setItem("completionStatus",JSON.stringify(e))}),[]),(0,h.jsx)(a.A,{style:{padding:16},children:(0,h.jsxs)(r.A,{my:4,children:[(0,h.jsx)(i.A,{variant:"h4",component:"h1",gutterBottom:!0,children:"Assignment: Enhanced Planet Generation and Solar System Simulation"}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"In this assignment, you will enhance the planet generation script to include additional attributes and simulate a solar system. You will implement functionality to save this data to a file and load it back into a dictionary. Additionally, you will create functions to compute various astrophysical properties based on Kepler's third law of motion."}),(0,h.jsx)(i.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 1: Planet Generation with Additional Attributes"}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Extend the planet generation function to include the following attributes:"}),(0,h.jsxs)(o.A,{children:[(0,h.jsx)(l.Ay,{children:"Name"}),(0,h.jsx)(l.Ay,{children:"Type (e.g., rocky, gas giant, ice giant, dwarf planet)"}),(0,h.jsx)(l.Ay,{children:"Diameter (in kilometers)"}),(0,h.jsx)(l.Ay,{children:"Mass (in kilograms)"}),(0,h.jsx)(l.Ay,{children:"Distance from the star (semi-major axis, in meters)"}),(0,h.jsx)(l.Ay,{children:"Orbital period (in days)"}),(0,h.jsx)(l.Ay,{children:"Composition (e.g., hydrogen, helium, iron, silicates)"})]}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Ensure you use realistic ranges for each attribute when generating planets."}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Once you have implemented the function, you can run the unit tests to verify its correctness. Open a terminal in your project's root directory and run the following command:"}),(0,h.jsx)(c.Rc,{text:"python -m unittest discover -s tests -p 'test_main.py' -k test_generate_planet",language:"bash",theme:c.f$,codeBlock:!0}),(0,h.jsx)(i.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 2: Solar System Composition"}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Define a star with the following attributes:"}),(0,h.jsxs)(o.A,{children:[(0,h.jsx)(l.Ay,{children:"Name"}),(0,h.jsx)(l.Ay,{children:"Mass (in kilograms)"}),(0,h.jsx)(l.Ay,{children:"Luminosity (in watts)"}),(0,h.jsx)(l.Ay,{children:"Radius (in kilometers)"}),(0,h.jsx)(l.Ay,{children:"Temperature (in kelvin)"})]}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Create a list of planets, each represented as a dictionary with the attributes listed above."}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Once you have implemented the function, you can run the unit tests to verify its correctness. Open a terminal in your project's root directory and run the following command:"}),(0,h.jsx)(c.Rc,{text:"# test star generation\npython -m unittest discover -s tests -p 'test_main.py' -k test_generate_star\n\n# test solar system generation\npython -m unittest discover -s tests -p 'test_main.py' -k test_generate_star",language:"bash",theme:c.f$,codeBlock:!0}),(0,h.jsx)(i.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 3: Saving and Loading Data"}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Implement the following functions:"}),(0,h.jsxs)(o.A,{children:[(0,h.jsx)(l.Ay,{children:(0,h.jsxs)(i.A,{component:"span",children:[(0,h.jsx)("strong",{children:"save_solar_system(solar_system, filename):"})," Save the solar system (star and planets) to a JSON file."]})}),(0,h.jsx)(l.Ay,{children:(0,h.jsxs)(i.A,{component:"span",children:[(0,h.jsx)("strong",{children:"load_solar_system(filename):"})," Load the solar system data from a JSON file back into the program as a dictionary."]})})]}),(0,h.jsx)(i.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 4: Computational Functions"}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Implement the following functions:"}),(0,h.jsxs)(i.A,{component:"span",children:[(0,h.jsx)("strong",{children:"compute_velocity(distance, star_mass)"}),": Compute the orbital velocity of a planet using the formula:"]}),(0,h.jsx)("pre",{children:"v = \u221a(G * M_star / r)"}),(0,h.jsx)(i.A,{component:"span",style:{fontWeight:"bold"},children:"compute_star_mass(distance, period):"}),"Compute the mass of the star given the planet's orbital period and distance using Kepler's third law:",(0,h.jsx)("pre",{children:"M_star = (4 * \u03c0^2 * r^3) / (G * T^2)"}),(0,h.jsx)(i.A,{component:"span",style:{fontWeight:"bold"},children:"compute_orbit(velocity, star_mass):"}),"Compute the orbit distance given the velocity and mass of the star:",(0,h.jsx)("pre",{children:"r = (G * M_star) / v^2"}),(0,h.jsx)(i.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 6: User Interaction"}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Provide a simple command-line interface (CLI) or menu-based system for the user to:"}),(0,h.jsxs)(o.A,{children:[(0,h.jsx)(l.Ay,{children:"Generate a new solar system"}),(0,h.jsx)(l.Ay,{children:"Save the solar system to a file"}),(0,h.jsx)(l.Ay,{children:"Load a solar system from a file"}),(0,h.jsx)(l.Ay,{children:"Compute and display various properties (e.g., velocity, mass, orbit)"})]}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Ensure the output is formatted in a user-friendly manner, clearly displaying the properties of the star and each planet."}),(0,h.jsx)(i.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Advanced Features (Optional)"}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"If you wish to challenge yourself further, consider implementing the following advanced features:"}),(0,h.jsxs)(o.A,{children:[(0,h.jsx)(l.Ay,{children:(0,h.jsxs)(i.A,{component:"span",children:["Use a library like ",(0,h.jsx)("i",{children:"matplotlib"})," to create visual representations of the solar system, including orbits and positions of planets."]})}),(0,h.jsx)(l.Ay,{children:"Allow users to modify attributes of the star or planets and see the impact on their properties (e.g., change star mass and recompute velocities)."})]}),(0,h.jsx)(i.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Testing Your Code"}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"To test your code, run the following commands in your terminal:"}),(0,h.jsx)(c.Rc,{text:"# Run your Python script at the root of your project directory\npython src/main.py\n\n# Run unit tests at the root of your project directory\npython -m unittest discover -s tests",language:"bash",theme:c.f$,codeBlock:!0}),(0,h.jsx)(i.A,{variant:"body1",paragraph:!0,children:"Ensure all tests pass and your script runs without errors. Submit your code and unit tests as instructed."})]})})}const p=d}}]);
//# sourceMappingURL=8486.771c3b2e.chunk.js.map