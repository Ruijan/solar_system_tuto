"use strict";(self.webpackChunksolar_system=self.webpackChunksolar_system||[]).push([[7453],{7074:(e,n,t)=>{t.d(n,{A:()=>T});var o=t(5043),i=t(9252),s=t(6446),r=t(5865),a=t(2258),c=t(3827),u=t(7972),h=t(8577),l=t(4791),d=t(1353),f=t(1906),m=t(1021),p=t(579);const T=e=>{let{questions:n,onSuccess:t}=e;const[T,b]=(0,o.useState)({}),[g,x]=(0,o.useState)(!1),[v,w]=(0,o.useState)(!1);return(0,p.jsx)(i.A,{maxWidth:"md",children:(0,p.jsxs)(s.A,{my:4,children:[(0,p.jsx)(r.A,{variant:"h4",component:"h1",gutterBottom:!0,children:"Lecture Questionnaire"}),n.map(((e,n)=>(0,p.jsxs)(s.A,{my:2,children:[(0,p.jsxs)(a.A,{component:"fieldset",children:[(0,p.jsx)(c.A,{component:"legend",children:e.question}),e.code&&(0,p.jsx)(m.Rc,{text:e.code,language:"python",theme:m.f$,codeBlock:!0}),(0,p.jsx)(u.A,{name:"question-".concat(n),value:T[n]||"",onChange:e=>{return t=n,o=e.target.value,void b({...T,[t]:o});var t,o},children:e.options.map(((e,n)=>(0,p.jsx)(h.A,{value:e,control:(0,p.jsx)(l.A,{}),label:e},n)))})]}),g&&(0,p.jsx)(p.Fragment,{children:T[n]===e.answer?(0,p.jsx)(d.A,{severity:"success",children:"Correct"}):(0,p.jsx)(d.A,{severity:"error",children:e.explanation[T[n]]})})]},n))),!v&&(0,p.jsx)(f.A,{variant:"contained",color:"primary",onClick:()=>{x(!0);const e=n.every(((e,n)=>T[n]===e.answer));w(e)},children:"Submit"}),g&&v&&(0,p.jsx)(f.A,{variant:"contained",color:"secondary",onClick:t,style:{marginTop:"16px"},children:"Continue"})]})})}},7453:(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});t(5043);var o=t(7074),i=t(3216),s=t(579);const r=[{question:"1. What is wrong with the following function name?",code:"def func(x, y):\n    return x + y",options:["The name 'func' is not descriptive.","The function has too many parameters.","The function should not use return.","There is nothing wrong with the name."],answer:"The name 'func' is not descriptive.",explanation:{"The name 'func' is not descriptive.":"Correct. Function names should be descriptive to indicate their purpose.","The function has too many parameters.":"Incorrect. The function has an acceptable number of parameters.","The function should not use return.":"Incorrect. Using return is necessary for this function.","There is nothing wrong with the name.":"Incorrect. The name 'func' is too generic and not descriptive."}},{question:"2. Identify the issue with the following function based on the single responsibility principle.",code:"def process_and_save_data(data):\n    # Process data\n    processed_data = [d*2 for d in data]\n    \n    # Save data to file\n    with open('data.txt', 'w') as f:\n        f.write(str(processed_data))",options:["The function name is not descriptive.","The function has too many parameters.","The function is doing more than one task.","The function should not use list comprehensions."],answer:"The function is doing more than one task.",explanation:{"The function name is not descriptive.":"Incorrect. The function name is reasonably descriptive.","The function has too many parameters.":"Incorrect. The function has only one parameter.","The function is doing more than one task.":"Correct. The function should be split into two: one for processing data and one for saving data.","The function should not use list comprehensions.":"Incorrect. Using list comprehensions is not an issue here."}},{question:"3. What is the problem with this function length?",code:"def long_function():\n    for i in range(10):\n        print(i)\n    for j in range(20):\n        print(j)\n    for k in range(30):\n        print(k)\n    # Many more lines of code",options:["The function should be broken into smaller functions.","The function name is not descriptive.","The function has too many parameters.","The function should not use for loops."],answer:"The function should be broken into smaller functions.",explanation:{"The function should be broken into smaller functions.":"Correct. Long functions should be divided into smaller, more focused functions.","The function name is not descriptive.":"Incorrect. While the name could be improved, the main issue is the function length.","The function has too many parameters.":"Incorrect. The function has no parameters.","The function should not use for loops.":"Incorrect. Using for loops is not the issue here."}},{question:"4. What side effect does this function have?",code:"def add_to_list(item, lst=[]):\n    lst.append(item)\n    return lst",options:["It modifies the global state.","It has no side effects.","It uses a mutable default argument.","It does not return a value."],answer:"It uses a mutable default argument.",explanation:{"It modifies the global state.":"Incorrect. The function does not directly modify the global state.","It has no side effects.":"Incorrect. The function has a side effect due to the mutable default argument.","It uses a mutable default argument.":"Correct. Using mutable default arguments can lead to unexpected behavior.","It does not return a value.":"Incorrect. The function does return a value."}},{question:"5. What is wrong with the following file handling code?",code:"def read_file(file_path):\n    f = open(file_path, 'r')\n    data = f.read()\n    f.close()\n    return data",options:["The file is not properly closed if an error occurs.","The file should be opened in write mode.","The file should not be opened using open().","The function should not return data."],answer:"The file is not properly closed if an error occurs.",explanation:{"The file is not properly closed if an error occurs.":"Correct. Using a context manager (with statement) ensures the file is closed properly.","The file should be opened in write mode.":"Incorrect. The file needs to be opened in read mode.","The file should not be opened using open().":"Incorrect. Using open() is correct, but it should be used within a context manager.","The function should not return data.":"Incorrect. Returning data from the file is the intended behavior."}},{question:"6. What is the purpose of the following context manager?",code:"with open('data.txt', 'r') as f:\n    data = f.read()\nprint(data)",options:["To ensure the file is automatically closed after reading.","To open the file in write mode.","To prevent the file from being read.","To print the file content."],answer:"To ensure the file is automatically closed after reading.",explanation:{"To ensure the file is automatically closed after reading.":"Correct. The with statement ensures the file is properly closed after its block of code is executed.","To open the file in write mode.":"Incorrect. The file is opened in read mode.","To prevent the file from being read.":"Incorrect. The file is being read.","To print the file content.":"Incorrect. Printing the file content is not the purpose of the context manager."}},{question:"7. Identify the error in the following code snippet:",code:"from os import path\n\ndef check_file_exists(file_name):\n    return path.exists(file_name)\nprint(check_file_exists('data.txt'))",options:["The function should use an absolute path.","The import statement is incorrect.","There is no error.","The function should handle exceptions."],answer:"There is no error.",explanation:{"The function should use an absolute path.":"Incorrect. While using an absolute path can be helpful, it is not necessary.","The import statement is incorrect.":"Incorrect. The import statement is correct.","There is no error.":"Correct. The code snippet is correct and functional.","The function should handle exceptions.":"Incorrect. Exception handling is not required in this context."}},{question:"8. What does the following list comprehension do?",code:"numbers = [1, 2, 3, 4, 5]\nsquared = [x**2 for x in numbers]\nprint(squared)",options:["Squares each number in the list.","Cubes each number in the list.","Filters out even numbers.","Adds 2 to each number in the list."],answer:"Squares each number in the list.",explanation:{"Squares each number in the list.":"Correct. The list comprehension squares each number in the list.","Cubes each number in the list.":"Incorrect. The list comprehension squares, not cubes, the numbers.","Filters out even numbers.":"Incorrect. The list comprehension does not filter any numbers.","Adds 2 to each number in the list.":"Incorrect. The list comprehension squares the numbers, it does not add 2."}},{question:"9. What is the purpose of using a lambda function in this code?",code:"numbers = [1, 2, 3, 4]\ndoubled = list(map(lambda x: x * 2, numbers))\nprint(doubled)",options:["To define a small, anonymous function for doubling numbers.","To sort the numbers in the list.","To filter out odd numbers.","To add all numbers together."],answer:"To define a small, anonymous function for doubling numbers.",explanation:{"To define a small, anonymous function for doubling numbers.":"Correct. The lambda function is used to double each number in the list.","To sort the numbers in the list.":"Incorrect. The lambda function is not used for sorting.","To filter out odd numbers.":"Incorrect. The lambda function does not filter any numbers.","To add all numbers together.":"Incorrect. The lambda function is used to double the numbers, not add them together."}},{question:"10. What is the issue with the following data validation code?",code:'def validate_age(age):\n    assert age > 0, "Age must be positive"\n    return True\nprint(validate_age(-5))',options:["Using assert for data validation is not recommended.","The function should return False for invalid data.","The print statement is incorrect.","There is no issue with the code."],answer:"Using assert for data validation is not recommended.",explanation:{"Using assert for data validation is not recommended.":"Correct. Asserts can be disabled in production code; explicit checks are preferred.","The function should return False for invalid data.":"Incorrect. The function should handle invalid data appropriately, but the main issue is the use of assert.","The print statement is incorrect.":"Incorrect. The print statement is fine for testing purposes.","There is no issue with the code.":"Incorrect. Using assert for data validation is not recommended."}}],a=()=>{const e=(0,i.Zp)();return(0,s.jsx)(o.A,{questions:r,onSuccess:()=>{const n=JSON.parse(localStorage.getItem("completionStatus")||"{}");n.week2lecture4Questionnaire=!0,localStorage.setItem("completionStatus",JSON.stringify(n)),e("/week2")}})}}}]);
//# sourceMappingURL=7453.4368660e.chunk.js.map