{"version":3,"file":"static/js/8674.783a6ceb.chunk.js","mappings":"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","sources":["components/VerticalLinearStepper.tsx","components/weeks/week1/VSCodeInstructions.tsx","components/weeks/week1/Week1.tsx"],"sourcesContent":["// src/components/VerticalLinearStepper.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Stepper, Step, StepLabel, StepContent, Typography, Box, Button, StepButton } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\ninterface SubObjective {\r\n    id: string;\r\n    text: string;\r\n    route: string;\r\n}\r\n\r\ninterface Objective {\r\n    id: string;\r\n    text: string;\r\n    subObjectives?: SubObjective[];\r\n}\r\n\r\ninterface VerticalLinearStepperProps {\r\n    objectives: Objective[];\r\n}\r\n\r\nfunction getCurrentStepIndex(objectives: Objective[], completionStatus: { [key: string]: boolean }) {\r\n    for (let i = 0; i < objectives.length; i++) {\r\n        if (!completionStatus[objectives[i].id]) {\r\n            return i;\r\n        }\r\n    }\r\n    return objectives.length;\r\n}\r\n\r\nconst VerticalLinearStepper: React.FC<VerticalLinearStepperProps> = ({ objectives }) => {\r\n    const [activeStep, setActiveStep] = useState(getCurrentStepIndex(objectives, JSON.parse(localStorage.getItem('completionStatus') || '{}')));\r\n    const [activeSubStep, setActiveSubStep] = useState<number | undefined>(undefined);\r\n    const [completionStatus, setCompletionStatus] = useState<{ [key: string]: boolean }>({});\r\n\r\n    useEffect(() => {\r\n        // Load completion status from localStorage\r\n        const storedStatus = JSON.parse(localStorage.getItem('completionStatus') || '{}');\r\n        setCompletionStatus(storedStatus);\r\n    }, []);\r\n\r\n    const handleNext = () => {\r\n        if (activeSubStep !== undefined && activeSubStep < (objectives[activeStep].subObjectives?.length || 0) - 1) {\r\n            setActiveSubStep(activeSubStep + 1);\r\n        } else {\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n            setActiveSubStep(undefined);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        if (activeSubStep !== undefined && activeSubStep > 0) {\r\n            setActiveSubStep(activeSubStep - 1);\r\n        } else if (activeSubStep === 0) {\r\n            setActiveSubStep(undefined);\r\n        } else {\r\n            setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n            let subObjectives = objectives[activeStep - 1]?.subObjectives?.length;\r\n            setActiveSubStep(objectives[activeStep - 1] && subObjectives ? subObjectives : undefined);\r\n        }\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n        setActiveSubStep(undefined);\r\n        let completionStatus = JSON.parse(localStorage.getItem('completionStatus') || '{}');\r\n        for (let key in completionStatus) {\r\n            completionStatus[key] = false;\r\n        }\r\n        localStorage.setItem('completionStatus', JSON.stringify(completionStatus));\r\n        setCompletionStatus(completionStatus);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                {objectives.map((objective, index) => (\r\n                    <Step key={objective.id} completed={completionStatus[objective.id]}>\r\n                        <StepButton onClick={() => { setActiveStep(index); setActiveSubStep(undefined); }}>\r\n                            <StepLabel>{objective.text}</StepLabel>\r\n                        </StepButton>\r\n                        <StepContent>\r\n                            {objective.subObjectives && objective.subObjectives.length > 0 && (\r\n                                <Stepper activeStep={activeSubStep} orientation=\"vertical\">\r\n                                    {objective.subObjectives.map((subObjective, subIndex) => (\r\n                                        <Step key={subObjective.id} completed={completionStatus[subObjective.id]}>\r\n                                            <StepButton onClick={() => setActiveSubStep(subIndex)}>\r\n                                                <StepLabel>{subObjective.text}</StepLabel>\r\n                                            </StepButton>\r\n                                            <StepContent>\r\n                                                <Box sx={{ mb: 2 }}>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        onClick={handleNext}\r\n                                                        sx={{ mt: 1, mr: 1 }}\r\n                                                        component={RouterLink}\r\n                                                        to={subObjective.route}\r\n                                                    >\r\n                                                        {subIndex === (objective.subObjectives?.length || 0) - 1 && index === objectives.length - 1 ? 'Finish' : 'Continue'}\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        disabled={index === 0 && subIndex === 0}\r\n                                                        onClick={handleBack}\r\n                                                        sx={{ mt: 1, mr: 1 }}\r\n                                                    >\r\n                                                        Back\r\n                                                    </Button>\r\n                                                </Box>\r\n                                            </StepContent>\r\n                                        </Step>\r\n                                    ))}\r\n                                </Stepper>\r\n                            )}\r\n                        </StepContent>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            {activeStep === objectives.length && activeSubStep === undefined && (\r\n                <Box sx={{ mt: 2 }}>\r\n                    <Typography>All steps completed - you're finished</Typography>\r\n                    <Button onClick={handleReset} sx={{ mt: 1, mr: 1 }}>\r\n                        Reset\r\n                    </Button>\r\n                </Box>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default VerticalLinearStepper;\r\n","import {List, ListItem, ListItemText, Typography} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport function VSCodeInstallation() {\r\n    return <>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n            Installing Visual Studio Code and Setting Up Python\r\n        </Typography>\r\n        <Typography variant=\"body1\" paragraph>\r\n            Follow these steps to install Visual Studio Code (VSCode) and set up your Python environment.\r\n        </Typography>\r\n\r\n        <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n            Step 1: Install Visual Studio Code\r\n        </Typography>\r\n        <List>\r\n            <ListItem>\r\n                <ListItemText primary=\"1. Go to the Visual Studio Code website: https://code.visualstudio.com/\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                    primary=\"2. Click on the 'Download' button for your operating system (Windows, macOS, or Linux).\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText primary=\"3. Run the downloaded installer and follow the installation instructions.\"/>\r\n            </ListItem>\r\n        </List>\r\n\r\n        <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n            Step 2: Install Python\r\n        </Typography>\r\n        <List>\r\n            <ListItem>\r\n                <ListItemText primary=\"1. Go to the Python website: https://www.python.org/\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                    primary=\"2. Click on the 'Downloads' button and select the version for your operating system.\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                    primary=\"3. Run the downloaded installer and follow the installation instructions. Make sure to check the option to add Python to your PATH during installation.\"/>\r\n            </ListItem>\r\n        </List>\r\n\r\n        <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n            Step 3: Set Up VSCode for Python Development\r\n        </Typography>\r\n        <List>\r\n            <ListItem>\r\n                <ListItemText primary=\"1. Open Visual Studio Code.\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                    primary=\"2. Go to the Extensions view by clicking on the Extensions icon in the Activity Bar on the side of the window or by pressing `Ctrl+Shift+X`.\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                    primary=\"3. In the Extensions view, search for 'Python' and install the official Python extension by Microsoft.\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText primary=\"4. After the installation, you may need to reload VSCode.\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                    primary=\"5. Open the Command Palette by pressing `Ctrl+Shift+P` and type 'Python: Select Interpreter'. Choose the Python interpreter that you installed in Step 2.\"/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText primary=\"6. Create a new Python file and start coding!\"/>\r\n            </ListItem>\r\n        </List>\r\n\r\n        <Typography variant=\"body1\" paragraph>\r\n            With these steps, you should have a fully functional Python development environment set up in Visual Studio\r\n            Code.\r\n        </Typography>\r\n    </>;\r\n}\r\n","// src/components/Week1.tsx\r\n\r\nimport React from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Container,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Typography,\r\n    Divider\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport VerticalLinearStepper from \"../../VerticalLinearStepper\";\r\nimport {VSCodeInstallation} from \"./VSCodeInstructions\";\r\n\r\nconst objectives = [\r\n    {\r\n        id: 'lecture1',\r\n        text: 'Lecture 1: Variables in Python',\r\n        subObjectives: [\r\n            { id: 'lecture1Content', text: 'Read Lecture 1', route: '/week1/lecture1' },\r\n            { id: 'lecture1Questionnaire', text: 'Complete Questionnaire', route: '/week1/lecture1/questionnaire' },\r\n        ],\r\n    },\r\n    {\r\n        id: 'lecture2',\r\n        text: 'Lecture 2: Control Structures',\r\n        subObjectives: [\r\n            { id: 'lecture2Content', text: 'Read Lecture 2', route: '/week1/lecture2' },\r\n            { id: 'lecture2Questionnaire', text: 'Complete Questionnaire', route: '/week1/lecture2/questionnaire' },\r\n        ],\r\n    },\r\n    {\r\n        id: 'lecture3',\r\n        text: 'Lecture 3: Data Structures',\r\n        subObjectives: [\r\n            { id: 'lecture3Content', text: 'Read Lecture 3', route: '/week1/lecture3' },\r\n            { id: 'lecture3Questionnaire', text: 'Complete Questionnaire', route: '/week1/lecture3/questionnaire' },\r\n        ],\r\n    },\r\n    {\r\n        id: 'lecture4',\r\n        text: 'Lecture 4: Naming Conventions for Variables',\r\n        subObjectives: [\r\n            { id: 'lecture4Content', text: 'Read Lecture 4', route: '/week1/lecture4' },\r\n            { id: 'lecture4Questionnaire', text: 'Complete Questionnaire', route: '/week1/lecture4/questionnaire' },\r\n        ],\r\n    },\r\n    {\r\n        id: 'assignment1',\r\n        text: 'Week 1 Assignment',\r\n        subObjectives: [\r\n            { id: 'assignment1Instructions', text: 'Read Assignment Instructions', route: '/week1/assignment/instructions' },\r\n        ],\r\n    },\r\n];\r\n\r\n\r\nconst Week1: React.FC = () => {\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Box my={4}>\r\n                <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n                    Week 1: Refresher on Basics and Simple Planet Generation\r\n                </Typography>\r\n                <Box sx={{ position: 'fixed', top: '250px', right: '20px', width: '300px', height: '90vh', overflowX: 'hidden' }}>\r\n                    <VerticalLinearStepper objectives={objectives} />\r\n                </Box>\r\n                <Grid container my={4}>\r\n                    <Grid xs={8}>\r\n                        <Typography variant=\"h4\" component=\"h2\" gutterBottom>\r\n                            Objectives\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n                            Learning Objectives\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary=\"Review Python basics: variables, data types, and basic operations\"/>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Control structures: conditionals and loops\"/>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Basic data structures: lists and dictionaries\"/>\r\n                            </ListItem>\r\n                        </List>\r\n                        <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n                            Coding Objectives\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Implement basic procedural planet generation\"/>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Create a list of planets with random attributes\"/>\r\n                            </ListItem>\r\n                        </List>\r\n                        <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n                            Activities\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" paragraph>\r\n                            <strong>Lecture:</strong> Review of Python basics, conditionals, loops, and data structures.\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" paragraph>\r\n                            <strong>Assignment:</strong> Create a list of planets with randomly generated attributes and\r\n                            print their details.\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box my={4}>\r\n                    <Divider />\r\n                    <Typography variant=\"h4\" component=\"h2\" gutterBottom my={2}>\r\n                        Lectures\r\n                    </Typography>\r\n                    <Grid container spacing={4} >\r\n                        <Grid item xs={12} md={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h3\">\r\n                                        Lecture 1: Variables in Python\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Learn about different types of variables in Python.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" component={RouterLink} to=\"/week1/lecture1\">\r\n                                        Go to Lecture\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h3\">\r\n                                        Lecture 2: Control Structures\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Understand conditionals and loops in Python.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" component={RouterLink} to=\"/week1/lecture2\">\r\n                                        Go to Lecture\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h3\">\r\n                                        Lecture 3: Data Structures\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Learn about lists and dictionaries in Python.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" component={RouterLink} to=\"/week1/lecture3\">\r\n                                        Go to Lecture\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h3\">\r\n                                        Lecture 4: Naming Conventions for Variables\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Learn about basics of Clean Code and naming conventions.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" component={RouterLink} to=\"/week1/lecture4\">\r\n                                        Go to Lecture\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Divider/>\r\n                <VSCodeInstallation/>\r\n                <Box my={4}>\r\n                    <Divider />\r\n                    <Typography variant=\"h4\" component=\"h2\" gutterBottom my={2}>\r\n                        Assignments\r\n                    </Typography>\r\n                    <Button variant=\"contained\" color=\"primary\" component={RouterLink} to=\"/week1/assignment/instructions\">\r\n                        View Assignment Instructions\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Week1;\r\n"],"names":["_ref","objectives","activeStep","setActiveStep","useState","completionStatus","i","length","id","getCurrentStepIndex","JSON","parse","localStorage","getItem","activeSubStep","setActiveSubStep","undefined","setCompletionStatus","useEffect","storedStatus","handleNext","_objectives$activeSte","subObjectives","prevActiveStep","handleBack","_objectives","_objectives$subObject","_jsxs","Box","children","_jsx","Stepper","orientation","map","objective","index","Step","completed","StepButton","onClick","StepLabel","text","StepContent","subObjective","subIndex","_objective$subObjecti","sx","mb","Button","variant","mt","mr","component","RouterLink","to","route","disabled","Typography","handleReset","key","setItem","stringify","VSCodeInstallation","_Fragment","gutterBottom","paragraph","List","ListItem","ListItemText","primary","Week1","Container","maxWidth","my","position","top","right","width","height","overflowX","VerticalLinearStepper","Grid","container","xs","Divider","spacing","item","md","Card","CardContent","CardActions","size","color"],"sourceRoot":""}