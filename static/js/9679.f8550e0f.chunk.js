"use strict";(self.webpackChunksolar_system=self.webpackChunksolar_system||[]).push([[9679],{7074:(e,n,t)=>{t.d(n,{A:()=>m});var o=t(5043),i=t(9252),r=t(6446),a=t(5865),l=t(2258),s=t(3827),c=t(7972),d=t(8577),p=t(4791),h=t(1353),f=t(1906),w=t(1021),u=t(579);const m=e=>{let{questions:n,onSuccess:t}=e;const[m,g]=(0,o.useState)({}),[x,b]=(0,o.useState)(!1),[y,C]=(0,o.useState)(!1);return(0,u.jsx)(i.A,{maxWidth:"md",children:(0,u.jsxs)(r.A,{my:4,children:[(0,u.jsx)(a.A,{variant:"h4",component:"h1",gutterBottom:!0,children:"Lecture Questionnaire"}),n.map(((e,n)=>(0,u.jsxs)(r.A,{my:2,children:[(0,u.jsxs)(l.A,{component:"fieldset",children:[(0,u.jsx)(s.A,{component:"legend",children:e.question}),e.code&&(0,u.jsx)(w.Rc,{text:e.code,language:"python",theme:w.f$,codeBlock:!0}),(0,u.jsx)(c.A,{name:"question-".concat(n),value:m[n]||"",onChange:e=>{return t=n,o=e.target.value,void g({...m,[t]:o});var t,o},children:e.options.map(((e,n)=>(0,u.jsx)(d.A,{value:e,control:(0,u.jsx)(p.A,{}),label:e},n)))})]}),x&&(0,u.jsx)(u.Fragment,{children:m[n]===e.answer?(0,u.jsx)(h.A,{severity:"success",children:"Correct"}):(0,u.jsx)(h.A,{severity:"error",children:e.explanation[m[n]]})})]},n))),!y&&(0,u.jsx)(f.A,{variant:"contained",color:"primary",onClick:()=>{b(!0);const e=n.every(((e,n)=>m[n]===e.answer));C(e)},children:"Submit"}),x&&y&&(0,u.jsx)(f.A,{variant:"contained",color:"secondary",onClick:t,style:{marginTop:"16px"},children:"Continue"})]})})}},9679:(e,n,t)=>{t.r(n),t.d(n,{default:()=>l});t(5043);var o=t(3216),i=t(7074),r=t(579);const a=[{question:"1. What is the default mode when opening a file using the open() function in Python?",options:["r","w","a","b"],answer:"r",explanation:{w:"Incorrect. 'w' mode is for writing and will truncate the file if it exists.",a:"Incorrect. 'a' mode is for appending to the file if it exists.",b:"Incorrect. 'b' mode is for binary mode.",r:"Correct. 'r' mode is for reading, which is the default mode."}},{question:"2. Which of the following methods is used to read a file line by line?",options:["read()","readlines()","readline()","write()"],answer:"readline()",explanation:{"read()":"Incorrect. read() reads the entire file at once.","readlines()":"Incorrect. readlines() reads all the lines into a list.","readline()":"Correct. readline() reads one line at a time.","write()":"Incorrect. write() is used to write data to a file."}},{question:"3. What will be the output of the following code?",code:"with open('example.txt', 'w') as f:\n    f.write('Hello, world!')\nwith open('example.txt', 'r') as f:\n    print(f.read())",options:["Error","Hello, world!","Nothing","example.txt"],answer:"Hello, world!",explanation:{Error:"Incorrect. The code will not throw an error.","Hello, world!":"Correct. The file is written with 'Hello, world!' and then read back.",Nothing:"Incorrect. The file has content which is read and printed.","example.txt":"Incorrect. The filename is not printed, the content of the file is."}},{question:"4. Which mode should be used to open a file for both reading and writing?",options:["r+","w+","a+","rb+"],answer:"r+",explanation:{"r+":"Correct. r+ opens the file for both reading and writing.","w+":"Incorrect. w+ truncates the file to zero length.","a+":"Incorrect. a+ opens the file for appending and reading.","rb+":"Incorrect. rb+ is for reading and writing in binary mode."}},{question:"5. What is wrong with the following code?",code:"with open('data.txt', 'r') as f:\n    f.write('Adding some text')",options:["Nothing","File not opened","Cannot write in read mode","Incorrect file name"],answer:"Cannot write in read mode",explanation:{Nothing:"Incorrect. There is an issue in the code.","File not opened":"Incorrect. The file is opened.","Cannot write in read mode":"Correct. The file is opened in read mode, so writing is not allowed.","Incorrect file name":"Incorrect. The file name does not affect this operation."}},{question:"6. How do you ensure a file is properly closed after operations?",options:["Using close() method","Using with statement","Using try/finally block","All of the above"],answer:"All of the above",explanation:{"Using close() method":"Correct. Using close() manually closes the file.","Using with statement":"Correct. Using with statement ensures the file is closed automatically.","Using try/finally block":"Correct. Using try/finally block can ensure the file is closed in the finally block.","All of the above":"Correct. All methods can ensure a file is properly closed."}},{question:"7. What is the difference between 'r' and 'rb' modes in file handling?",options:["No difference","'r' is for reading text, 'rb' is for reading binary","'r' is for reading, 'rb' is for reading and writing","'r' is for reading, 'rb' is for reading in append mode"],answer:"'r' is for reading text, 'rb' is for reading binary",explanation:{"No difference":"Incorrect. There is a difference between 'r' and 'rb' modes.","'r' is for reading text, 'rb' is for reading binary":"Correct. 'r' is for reading text files, 'rb' is for reading binary files.","'r' is for reading, 'rb' is for reading and writing":"Incorrect. 'rb' is not for reading and writing.","'r' is for reading, 'rb' is for reading in append mode":"Incorrect. 'rb' is not for reading in append mode."}},{question:"8. What will be the output of the following code?",code:"with open('sample.txt', 'a') as f:\n    f.write('New line\\n')\nwith open('sample.txt', 'r') as f:\n    print(f.read())",options:["Error","Overwrites content with 'New line'","Appends 'New line' at the end","Clears the file"],answer:"Appends 'New line' at the end",explanation:{Error:"Incorrect. The code will not throw an error.","Overwrites content with 'New line'":"Incorrect. 'a' mode appends to the file, it does not overwrite.","Appends 'New line' at the end":"Correct. 'a' mode appends the new content at the end of the file.","Clears the file":"Incorrect. 'a' mode does not clear the file."}},{question:"9. Which of the following code snippets will correctly read a file 'example.txt' and print each line with its line number?",code:"# Code Snippet A\nwith open('example.txt', 'r') as f:\n    for line in f:\n        print(line)\n\n# Code Snippet B\nwith open('example.txt', 'r') as f:\n    for line_number, line in enumerate(f, start=1):\n        print(f'{line_number}: {line}')\n        \n# Code Snippet C\nwith open('example.txt', 'r') as f:\n    lines = f.readlines()\n    for line in lines:\n        print(line)",options:["Code Snippet A","Code Snippet B","Code Snippet C","None of the above"],answer:"Code Snippet B",explanation:{"Code Snippet A":"Incorrect. This prints each line but does not include line numbers.","Code Snippet B":"Correct. This snippet includes line numbers in the output.","Code Snippet C":"Incorrect. This prints each line but does not include line numbers.","None of the above":"Incorrect. One of the snippets does print lines with line numbers."}},{question:"10. What will be the result of executing the following code?",code:"try:\n    with open('missing.txt', 'r') as f:\n        content = f.read()\nexcept FileNotFoundError:\n    print(\"File not found.\")\nfinally:\n    print(\"Execution complete.\")",options:["File not found.","File not found.\nExecution complete.","Execution complete.","Error"],answer:"File not found.\nExecution complete.",explanation:{"File not found.":"Incorrect. This will be printed, but 'Execution complete.' will also be printed due to the finally block.","File not found.\nExecution complete.":"Correct. The except block handles the error and finally block prints 'Execution complete.'.","Execution complete.":"Incorrect. This will be printed but so will 'File not found.'",Error:"Incorrect. The error is handled by the except block."}}],l=()=>{const e=(0,o.Zp)();return(0,r.jsx)(i.A,{questions:a,onSuccess:()=>{const n=JSON.parse(localStorage.getItem("completionStatus")||"{}");n.week2lecture2Questionnaire=!0,localStorage.setItem("completionStatus",JSON.stringify(n)),e("/week2/lecture3")}})}}}]);
//# sourceMappingURL=9679.f8550e0f.chunk.js.map