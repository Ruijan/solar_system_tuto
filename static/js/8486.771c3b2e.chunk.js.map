{"version":3,"file":"static/js/8486.771c3b2e.chunk.js","mappings":"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","sources":["components/weeks/week2/AssignmentInstructions.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Typography, Box, Button, Paper, List, ListItem, Grid } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {CopyBlock, dracula} from \"react-code-blocks\";\r\n\r\nexport function AssignmentInstructions() {\r\n    useEffect(() => {\r\n        const completionStatus = JSON.parse(localStorage.getItem('completionStatus') || '{}');\r\n        completionStatus['assignment'] = true;\r\n        localStorage.setItem('completionStatus', JSON.stringify(completionStatus));\r\n    }, []);\r\n\r\n    return (\r\n        <Paper style={{ padding: 16 }}>\r\n            <Box my={4}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                    Assignment: Enhanced Planet Generation and Solar System Simulation\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    In this assignment, you will enhance the planet generation script to include additional attributes and simulate a solar system. You will implement functionality to save this data to a file and load it back into a dictionary. Additionally, you will create functions to compute various astrophysical properties based on Kepler's third law of motion.\r\n                </Typography>\r\n\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    Exercise 1: Planet Generation with Additional Attributes\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Extend the planet generation function to include the following attributes:\r\n                </Typography>\r\n                <List>\r\n                    <ListItem>Name</ListItem>\r\n                    <ListItem>Type (e.g., rocky, gas giant, ice giant, dwarf planet)</ListItem>\r\n                    <ListItem>Diameter (in kilometers)</ListItem>\r\n                    <ListItem>Mass (in kilograms)</ListItem>\r\n                    <ListItem>Distance from the star (semi-major axis, in meters)</ListItem>\r\n                    <ListItem>Orbital period (in days)</ListItem>\r\n                    <ListItem>Composition (e.g., hydrogen, helium, iron, silicates)</ListItem>\r\n                </List>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Ensure you use realistic ranges for each attribute when generating planets.\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Once you have implemented the function, you can run the unit tests to verify its correctness. Open a terminal in your project's root directory and run the following command:\r\n                </Typography>\r\n                <CopyBlock\r\n                    text={`python -m unittest discover -s tests -p 'test_main.py' -k test_generate_planet`}\r\n                    language=\"bash\"\r\n                    theme={dracula}\r\n                    codeBlock\r\n                />\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    Exercise 2: Solar System Composition\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Define a star with the following attributes:\r\n                </Typography>\r\n                <List>\r\n                    <ListItem>Name</ListItem>\r\n                    <ListItem>Mass (in kilograms)</ListItem>\r\n                    <ListItem>Luminosity (in watts)</ListItem>\r\n                    <ListItem>Radius (in kilometers)</ListItem>\r\n                    <ListItem>Temperature (in kelvin)</ListItem>\r\n                </List>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Create a list of planets, each represented as a dictionary with the attributes listed above.\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Once you have implemented the function, you can run the unit tests to verify its correctness. Open a terminal in your project's root directory and run the following command:\r\n                </Typography>\r\n                <CopyBlock\r\n                    text={`# test star generation\r\npython -m unittest discover -s tests -p 'test_main.py' -k test_generate_star\r\n\r\n# test solar system generation\r\npython -m unittest discover -s tests -p 'test_main.py' -k test_generate_star`}\r\n                    language=\"bash\"\r\n                    theme={dracula}\r\n                    codeBlock\r\n                />\r\n\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    Exercise 3: Saving and Loading Data\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Implement the following functions:\r\n                </Typography>\r\n                <List>\r\n                    <ListItem>\r\n                        <Typography component=\"span\">\r\n                            <strong>save_solar_system(solar_system, filename):</strong> Save the solar system (star and planets) to a JSON file.\r\n                        </Typography>\r\n\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <Typography component=\"span\">\r\n                            <strong>load_solar_system(filename):</strong> Load the solar system data from a JSON file back into the program as a dictionary.\r\n                        </Typography>\r\n                    </ListItem>\r\n                </List>\r\n\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    Exercise 4: Computational Functions\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Implement the following functions:\r\n                </Typography>\r\n                <Typography component=\"span\" >\r\n                    <strong>compute_velocity(distance, star_mass)</strong>: Compute the orbital velocity of a planet using the formula:\r\n\r\n                </Typography>\r\n                <pre>\r\n                    v = √(G * M_star / r)\r\n                </pre>\r\n                <Typography component=\"span\" style={{ fontWeight: 'bold' }}>\r\n                    compute_star_mass(distance, period):\r\n                </Typography>\r\n                Compute the mass of the star given the planet's orbital period and distance using Kepler's third law:\r\n                <pre>\r\n                    M_star = (4 * π^2 * r^3) / (G * T^2)\r\n                </pre>\r\n                <Typography component=\"span\" style={{ fontWeight: 'bold' }}>\r\n                    compute_orbit(velocity, star_mass):\r\n                </Typography>\r\n                Compute the orbit distance given the velocity and mass of the star:\r\n                <pre>\r\n                    r = (G * M_star) / v^2\r\n                </pre>\r\n\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    Exercise 6: User Interaction\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Provide a simple command-line interface (CLI) or menu-based system for the user to:\r\n                </Typography>\r\n                <List>\r\n                    <ListItem>Generate a new solar system</ListItem>\r\n                    <ListItem>Save the solar system to a file</ListItem>\r\n                    <ListItem>Load a solar system from a file</ListItem>\r\n                    <ListItem>Compute and display various properties (e.g., velocity, mass, orbit)</ListItem>\r\n                </List>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Ensure the output is formatted in a user-friendly manner, clearly displaying the properties of the star and each planet.\r\n                </Typography>\r\n\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    Advanced Features (Optional)\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    If you wish to challenge yourself further, consider implementing the following advanced features:\r\n                </Typography>\r\n                <List>\r\n                    <ListItem><Typography component=\"span\">Use a library like <i>matplotlib</i> to create visual representations of the solar system, including orbits and positions of planets.</Typography></ListItem>\r\n                    <ListItem>Allow users to modify attributes of the star or planets and see the impact on their properties (e.g., change star mass and recompute velocities).</ListItem>\r\n                </List>\r\n\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    Testing Your Code\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph>\r\n                    To test your code, run the following commands in your terminal:\r\n                </Typography>\r\n                <CopyBlock\r\n                    text={`# Run your Python script at the root of your project directory\r\npython src/main.py\r\n\r\n# Run unit tests at the root of your project directory\r\npython -m unittest discover -s tests`}\r\n                    language=\"bash\"\r\n                    theme={dracula}\r\n                    codeBlock\r\n                />\r\n                <Typography variant=\"body1\" paragraph>\r\n                    Ensure all tests pass and your script runs without errors. Submit your code and unit tests as instructed.\r\n                </Typography>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default AssignmentInstructions;\r\n"],"names":["AssignmentInstructions","useEffect","completionStatus","JSON","parse","localStorage","getItem","setItem","stringify","_jsx","Paper","style","padding","children","_jsxs","Box","my","Typography","variant","component","gutterBottom","paragraph","List","ListItem","CopyBlock","text","language","theme","dracula","codeBlock","fontWeight"],"sourceRoot":""}