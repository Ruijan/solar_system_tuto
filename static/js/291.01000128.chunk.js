"use strict";(self.webpackChunksolar_system=self.webpackChunksolar_system||[]).push([[291,1662,9872,7618],{291:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});n(5043);var a=n(9252),r=n(6446),s=n(7618),o=n(1662),i=n(3197),l=n(8758),d=n(9872),c=n(1639),h=n(579);const m=()=>(0,h.jsx)(a.A,{maxWidth:"md",children:(0,h.jsxs)(r.A,{my:4,children:[(0,h.jsx)(s.default,{}),(0,h.jsx)(o.default,{}),(0,h.jsx)(i.default,{}),(0,h.jsx)(d.default,{}),(0,h.jsx)(c.default,{}),(0,h.jsx)(l.default,{})]})})},1662:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var a=n(5043),r=n(6446),s=n(5865),o=n(5721),i=n(1322),l=n(8569),d=n(1906),c=n(4811),h=n(7677),m=n(1021),p=n(579);const u=()=>{const[e,t]=a.useState(!1),[n,u]=a.useState(!1);return(0,p.jsxs)(r.A,{my:4,children:[(0,p.jsx)(s.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 1: Understanding the Random Module"}),(0,p.jsx)(s.A,{variant:"body1",paragraph:!0,children:"In this exercise, you will learn about the `random` module in Python and use it to create a function that generates random planet names."}),(0,p.jsx)(s.A,{variant:"body1",paragraph:!0,children:"The `random` module is a built-in module in Python that allows you to generate random numbers. You can use it to create random values for different types of data."}),(0,p.jsx)(s.A,{variant:"body1",paragraph:!0,children:"Here are some useful functions from the `random` module:"}),(0,p.jsxs)(o.A,{children:[(0,p.jsx)(i.Ay,{children:(0,p.jsx)(l.A,{primary:"1. `random.random()` - Returns a random float between 0.0 and 1.0."})}),(0,p.jsx)(i.Ay,{children:(0,p.jsx)(l.A,{primary:"2. `random.randint(a, b)` - Returns a random integer between `a` and `b` (inclusive)."})}),(0,p.jsx)(i.Ay,{children:(0,p.jsx)(l.A,{primary:"3. `random.choice(seq)` - Returns a random element from the non-empty sequence `seq`."})}),(0,p.jsx)(i.Ay,{children:(0,p.jsx)(l.A,{primary:"4. `random.uniform(a, b)` - Returns a random float between `a` and `b`."})})]}),(0,p.jsx)(s.A,{variant:"body1",paragraph:!0,children:"Let's see an example of how to use the `random` module to generate a random planet name:"}),(0,p.jsx)(m.Rc,{text:'import random\n\ndef generate_planet_name():\n    names = ["jupiter", "mars", "venus", "earth", "saturn", "neptune", "uranus", "pluto"]\n    return random.choice(names)\n\n# Example usage\nprint(generate_planet_name())',language:"python",theme:m.f$,codeBlock:!0}),(0,p.jsxs)(s.A,{variant:"body1",paragraph:!0,children:["Your task is to create a function called `generate_planet_name` that uses the `random` module to generate random planet names. This function should return a string. It should be able to generate more than ",(0,p.jsx)("strong",{children:"1000 unique planet names"}),'. It should always start with a capital letter and have a length between 5 and 10 characters. Obvious names like "Earth" or "Mars" should not be generated and you should not create an array of all possible planet names.']}),(0,p.jsx)(s.A,{variant:"body1",paragraph:!0,children:"Ensure you return the generated name at the end of your function."}),(0,p.jsx)(s.A,{variant:"body1",paragraph:!0,children:"Once you have implemented the function, you can run the unit tests to verify its correctness. Open a terminal in your project's root directory and run the following command:"}),(0,p.jsx)(m.Rc,{text:"python -m unittest discover -s tests -p 'test_main.py' -k test_generate_planet_name",language:"python",theme:m.f$,codeBlock:!0}),(0,p.jsx)(s.A,{variant:"h6",component:"h3",gutterBottom:!0,children:"Template Code"}),(0,p.jsx)(m.Rc,{text:"import random\n\ndef generate_planet_name():\n    # Use random to generate a random planet name\n    pass",language:"python",theme:m.f$,codeBlock:!0}),(0,p.jsx)(s.A,{variant:"h6",component:"h3",gutterBottom:!0,children:"Tips"}),(0,p.jsx)(d.A,{onClick:()=>t(!e),startIcon:(0,p.jsx)(h.A,{}),children:e?"Hide Tip 1":"Show Tip 1"}),(0,p.jsx)(c.A,{in:e,children:(0,p.jsx)(r.A,{p:2,bgcolor:"#d5f5e3",borderRadius:4,children:(0,p.jsxs)(s.A,{variant:"body1",paragraph:!0,display:"flex",alignItems:"center",children:[(0,p.jsx)(h.A,{style:{marginRight:8}})," Tip 1: Think about how words are usually composed. For example, you can create a prefix and a suffix list and combine them to form names."]})})}),(0,p.jsx)(d.A,{onClick:()=>u(!n),startIcon:(0,p.jsx)(h.A,{}),children:n?"Hide Tip 2":"Show Tip 2"}),(0,p.jsx)(c.A,{in:n,children:(0,p.jsx)(r.A,{p:2,bgcolor:"#d5f5e3",borderRadius:4,children:(0,p.jsxs)(s.A,{variant:"body1",paragraph:!0,display:"flex",alignItems:"center",children:[(0,p.jsx)(h.A,{style:{marginRight:8}})," Tip 2: You can use `random.choice` multiple times to pick different parts of the name."]})})})]})}},3197:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});n(5043);var a=n(6446),r=n(5865),s=n(5721),o=n(1322),i=n(8569),l=n(1021),d=n(579);const c=()=>(0,d.jsxs)(a.A,{my:4,children:[(0,d.jsx)(r.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 2: Creating the `generate_planet` Function"}),(0,d.jsx)(r.A,{variant:"body1",paragraph:!0,children:"In this exercise, you will define a function called `generate_planet` that creates a planet with random attributes. These attributes include:"}),(0,d.jsxs)(s.A,{children:[(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"1. Name: A randomly generated planet name."})}),(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"2. Size: A positive float representing the planet's size."})}),(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"3. Color: A randomly selected color from a predefined list."})}),(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"4. Orbit Distance: A positive float representing the distance from the star."})}),(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"5. Orbital Period: A positive float representing the time it takes for the planet to complete one orbit around the star."})})]}),(0,d.jsx)(r.A,{variant:"body1",paragraph:!0,children:"Use the `random` module to generate random values for these attributes. Make sure the values meet the following requirements:"}),(0,d.jsxs)(s.A,{children:[(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"1. The name should be generated using your `generate_planet_name` function."})}),(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"2. The size, orbit distance, and orbital period should be positive floats."})}),(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"3. The color should be randomly chosen from a predefined list of color names using `random.choice`."})})]}),(0,d.jsx)(r.A,{variant:"body1",paragraph:!0,children:"Here is a template to get you started:"}),(0,d.jsx)(l.Rc,{text:"\nimport random\n\ndef generate_planet():\n    # Generate random attributes for the planet\n    # Ensure size, orbit distance, and orbital period are positive\n    pass\n                ",language:"python",theme:l.f$,codeBlock:!0}),(0,d.jsx)(r.A,{variant:"body1",paragraph:!0,children:"Ensure you return the generated planet dictionary at the end of your function."}),(0,d.jsx)(r.A,{variant:"body1",paragraph:!0,children:"Once you have implemented the function, you can run the unit tests to verify its correctness. Open a terminal in your project's root directory and run the following command:"}),(0,d.jsx)(l.Rc,{text:"python -m unittest discover -s tests -p 'test_main.py' -k test_generate_planet",language:"python",theme:l.f$,codeBlock:!0})]})},9872:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});n(5043);var a=n(6446),r=n(5865),s=n(1021),o=n(579);const i=()=>(0,o.jsxs)(a.A,{my:4,children:[(0,o.jsx)(r.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 3: Create the `generate_solar_system` Function"}),(0,o.jsx)(r.A,{variant:"body1",paragraph:!0,children:"In this exercise, you will define a function called `generate_solar_system` that generates a list of planets."}),(0,o.jsx)(r.A,{variant:"h6",component:"h3",gutterBottom:!0,children:"Template Code"}),(0,o.jsx)(s.Rc,{text:"\ndef generate_solar_system(num_planets=8):\n    # Create a list to hold the planets\n    # Generate the specified number of planets using the generate_planet function\n    # Return the list of planets\n    pass\n                ",language:"python",theme:s.f$,codeBlock:!0}),(0,o.jsx)(r.A,{variant:"body1",paragraph:!0,children:"Once you have implemented the function, you can run the unit tests to verify its correctness. Open a terminal in your project's root directory and run the following command:"}),(0,o.jsx)(s.Rc,{text:"python -m unittest discover -s tests -p 'test_main.py' -k test_generate_solar_system",language:"python",theme:s.f$,codeBlock:!0})]})},1639:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});n(5043);var a=n(6446),r=n(5865),s=n(5721),o=n(1322),i=n(8569),l=n(1021),d=n(579);const c=()=>(0,d.jsxs)(a.A,{my:4,children:[(0,d.jsx)(r.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Exercise 4: Print the List of Planets"}),(0,d.jsx)(r.A,{variant:"body1",paragraph:!0,children:"In this exercise, you will print the list of planets generated by the `generate_solar_system` function."}),(0,d.jsx)(s.A,{children:(0,d.jsx)(o.Ay,{children:(0,d.jsx)(i.A,{primary:"1. In your `planet_generation.py` file, add code to print the list of planets generated by the `generate_solar_system` function."})})}),(0,d.jsx)(r.A,{variant:"h6",component:"h3",gutterBottom:!0,children:"Template Code"}),(0,d.jsx)(l.Rc,{text:'\nif __name__ == "__main__":\n    solar_system = generate_solar_system()\n    for planet in solar_system:\n        print(planet)\n                ',language:"python",theme:l.f$,codeBlock:!0})]})},7618:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});n(5043);var a=n(6446),r=n(5865),s=n(1906),o=n(6159),i=n.n(o),l=n(2450),d=n(1021),c=n(579);const h=()=>(0,c.jsxs)(a.A,{my:4,children:[(0,c.jsx)(r.A,{variant:"h4",component:"h1",gutterBottom:!0,children:"Week 1 Assignment: Basic Planet Generation"}),(0,c.jsx)(r.A,{variant:"body1",paragraph:!0,children:"In this assignment, you will create a simple Python script to generate a list of planets with randomly generated attributes. Follow the steps below to complete the assignment and test your code."}),(0,c.jsx)(r.A,{variant:"body1",paragraph:!0,children:"To get started, download the assignment code files:"}),(0,c.jsx)(s.A,{variant:"contained",color:"primary",onClick:async()=>{const e=new(i()),t=e.folder("week1_code"),n=["assignments/week1_code/src/__init__.py","assignments/week1_code/src/main.py","assignments/week1_code/tests/__init__.py","assignments/week1_code/tests/test_main.py"];for(const r of n){const e=await fetch("".concat("/solar_system_tuto","/").concat(r));if(e.ok){const n=await e.text();null===t||void 0===t||t.file(r.split("/").slice(-2).join("/"),n)}else console.error("Failed to fetch ".concat(r))}const a=await e.generateAsync({type:"blob"});(0,l.saveAs)(a,"week1_code.zip")},children:"Download Assignment Code Files"}),(0,c.jsx)(r.A,{variant:"body1",paragraph:!0,children:"The downloaded zip file will contain the following file:"}),(0,c.jsx)(r.A,{variant:"h6",component:"h3",gutterBottom:!0,children:"main.py"}),(0,c.jsx)(d.Rc,{text:'import random\n\ndef generate_planet_name():\n    # ADD YOUR CODE HERE\n    pass\n\ndef generate_planet():\n    # ADD YOUR CODE HERE\n    pass\n\ndef generate_solar_system(num_planets=8):\n    # ADD YOUR CODE HERE\n    pass\n\ndef print_solar_system(solar_system):\n    # ADD YOUR CODE HERE\n    pass\n\nif __name__ == "__main__":\n    solar_system = generate_solar_system()\n    print_solar_system(solar_system)',language:"python",theme:d.f$,codeBlock:!0}),(0,c.jsx)(r.A,{variant:"body1",paragraph:!0,children:"Please modify the `main.py` file according to the instructions provided in the exercises below."})]})},8758:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});n(5043);var a=n(6446),r=n(5865),s=n(5721),o=n(1322),i=n(8569),l=n(3336),d=n(1021),c=n(579);const h=()=>(0,c.jsxs)(a.A,{my:4,children:[(0,c.jsx)(r.A,{variant:"h5",component:"h2",gutterBottom:!0,children:"Testing Your Code"}),(0,c.jsx)(r.A,{variant:"body1",paragraph:!0,children:"To test your code, you can use the command line. Follow the steps below to run your Python script and verify that it works correctly."}),(0,c.jsxs)(s.A,{children:[(0,c.jsx)(o.Ay,{children:(0,c.jsx)(i.A,{primary:"1. Open a terminal or command prompt."})}),(0,c.jsx)(o.Ay,{children:(0,c.jsx)(i.A,{primary:"2. Navigate to the directory where your `planet_generation.py` file is located."})}),(0,c.jsx)(o.Ay,{children:(0,c.jsx)(i.A,{primary:"3. Run the following command to execute your script:"})})]}),(0,c.jsx)(l.A,{elevation:3,sx:{padding:2,backgroundColor:"#f5f5f5"},children:(0,c.jsx)(d.Rc,{text:"python planet_generation.py",language:"bash",theme:d.f$,codeBlock:!0})}),(0,c.jsx)(r.A,{variant:"body1",paragraph:!0,children:"You should see the list of generated planets printed in the terminal. Verify that the output matches the expected format and that the attributes are generated correctly."})]})},7677:(e,t,n)=>{var a=n(4994);t.A=void 0;var r=a(n(39)),s=n(579);t.A=(0,r.default)((0,s.jsx)("path",{d:"M9 21c0 .5.4 1 1 1h4c.6 0 1-.5 1-1v-1H9zm3-19C8.1 2 5 5.1 5 9c0 2.4 1.2 4.5 3 5.7V17c0 .5.4 1 1 1h6c.6 0 1-.5 1-1v-2.3c1.8-1.3 3-3.4 3-5.7 0-3.9-3.1-7-7-7"}),"Lightbulb")}}]);
//# sourceMappingURL=291.01000128.chunk.js.map