{"version":3,"file":"static/js/3197.5273c150.chunk.js","mappings":"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","sources":["components/weeks/week1/assignment/Exercise2.tsx","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/ListItemText/ListItemText.js"],"sourcesContent":["// src/components/weeks/week1/Exercise2.tsx\r\nimport React from 'react';\r\nimport { Typography, Box, List, ListItem, ListItemText } from '@mui/material';\r\nimport { CopyBlock, dracula } from 'react-code-blocks';\r\n\r\nconst Exercise2: React.FC = () => {\r\n    return (\r\n        <Box my={4}>\r\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                Exercise 2: Creating the `generate_planet` Function\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n                In this exercise, you will define a function called `generate_planet` that creates a planet with random attributes. These attributes include:\r\n            </Typography>\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemText primary=\"1. Name: A randomly generated planet name.\" />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary=\"2. Size: A positive float representing the planet's size.\" />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary=\"3. Color: A randomly selected color from a predefined list.\" />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary=\"4. Orbit Distance: A positive float representing the distance from the star.\" />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary=\"5. Orbital Period: A positive float representing the time it takes for the planet to complete one orbit around the star.\" />\r\n                </ListItem>\r\n            </List>\r\n            <Typography variant=\"body1\" paragraph>\r\n                Use the `random` module to generate random values for these attributes. Make sure the values meet the following requirements:\r\n            </Typography>\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemText primary=\"1. The name should be generated using your `generate_planet_name` function.\" />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary=\"2. The size, orbit distance, and orbital period should be positive floats.\" />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary=\"3. The color should be randomly chosen from a predefined list of color names using `random.choice`.\" />\r\n                </ListItem>\r\n            </List>\r\n            <Typography variant=\"body1\" paragraph>\r\n                Here is a template to get you started:\r\n            </Typography>\r\n            <CopyBlock\r\n                text={`\r\nimport random\r\n\r\ndef generate_planet():\r\n    # Generate random attributes for the planet\r\n    # Ensure size, orbit distance, and orbital period are positive\r\n    pass\r\n                `}\r\n                language=\"python\"\r\n                theme={dracula}\r\n                codeBlock\r\n            />\r\n            <Typography variant=\"body1\" paragraph>\r\n                Ensure you return the generated planet dictionary at the end of your function.\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n                Once you have implemented the function, you can run the unit tests to verify its correctness. Open a terminal in your project's root directory and run the following command:\r\n            </Typography>\r\n            <CopyBlock\r\n                text={`python -m unittest discover -s tests -p 'test_main.py' -k test_generate_planet`}\r\n                language=\"python\"\r\n                theme={dracula}\r\n                codeBlock\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Exercise2;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;"],"names":["Exercise2","_jsxs","Box","my","children","_jsx","Typography","variant","component","gutterBottom","paragraph","List","ListItem","ListItemText","primary","CopyBlock","text","language","theme","dracula","codeBlock","getListItemTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListItemTextRoot","styled","name","overridesResolver","props","styles","ownerState","concat","listItemTextClasses","secondary","root","inset","multiline","dense","_ref","_extends","flex","minWidth","marginTop","marginBottom","paddingLeft","React","inProps","ref","useThemeProps","className","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","_objectWithoutPropertiesLoose","ListContext","classes","slots","composeClasses","useUtilityClasses","type","undefined","display","color","clsx"],"sourceRoot":""}